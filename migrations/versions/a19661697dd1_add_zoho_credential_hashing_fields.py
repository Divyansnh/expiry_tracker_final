"""Add Zoho credential hashing fields

Revision ID: a19661697dd1
Revises: fix_report_date
Create Date: 2025-06-20 20:05:57.563411

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a19661697dd1'
down_revision = 'fix_report_date'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('message',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=False)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('priority',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.drop_column('is_read')

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_constraint('reports_date_user_key', type_='unique')
        batch_op.create_unique_constraint('unique_report_per_user_per_date', ['date', 'user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('zoho_client_id_hash', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('zoho_client_secret_hash', sa.String(length=255), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=256),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.drop_column('sms_notifications')
        batch_op.drop_column('in_app_notifications')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('in_app_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('sms_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=256),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('zoho_client_secret_hash')
        batch_op.drop_column('zoho_client_id_hash')

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_constraint('unique_report_per_user_per_date', type_='unique')
        batch_op.create_unique_constraint('reports_date_user_key', ['date', 'user_id'])

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('priority',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('type',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.alter_column('message',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    # ### end Alembic commands ###
